Updated Assignment – Using Free APIs & Database
Since SauceDemo does not support API and database testing, we will use:

UI Testing → https://www.saucedemo.com/ for frontend automation.
API Testing → https://reqres.in/ (a free REST API for testing).
Database Testing → Free MySQL/PostgreSQL database using a public sandbox or a local setup.
📌 Revised Assignment Details
1️⃣ UI Automation (Cypress + JavaScript) – Using SauceDemo
Steps:
✅ Login using valid credentials (standard_user / secret_sauce).
✅ Add random products to the cart dynamically.
✅ Proceed to checkout and complete the order.
✅ Validate order confirmation message and item details.
Enhancements:
✅ Implement Page Object Model (POM).
✅ Use custom Cypress commands for reusable actions.
✅ Implement data-driven testing from a JSON file.
✅ Capture screenshots on failure.
2️⃣ API Automation – Using ReqRes API (https://reqres.in/)
Tasks:
✅ Login API – Send a POST request to https://reqres.in/api/login with credentials and validate the token.
✅ User List API – Fetch users (https://reqres.in/api/users?page=2) and validate user details.
✅ Create User API – Send a POST request to create a new user and validate response fields.
✅ Update User API – Modify a user’s details and validate the response.
✅ Delete User API – Delete a user and validate status code 204.
Enhancements:
✅ Use Cypress intercept() to stub API responses.
✅ Validate responses using JSON Schema validation.
✅ Implement API chaining (fetch user → update user → delete user).
3️⃣ Database Automation – Using a Free PostgreSQL/MySQL Database
Option 1: Use https://www.freesqldatabase.com/ (Provides free MySQL DB with access credentials).

Option 2: Use a local MySQL/PostgreSQL setup for realistic testing.

Tasks:
✅ Connect Cypress to the database using cypress-sql-server (MySQL) or pg-promise (PostgreSQL).
✅ Insert test data (e.g., new users, orders).
✅ Fetch user details and validate against API response.
✅ Update a record and verify the change via API/UI.
✅ Delete an entry and ensure data consistency.

Enhancements:
✅ Use parameterized queries for secure database interaction.
✅ Store DB credentials using Cypress environment variables.

📌 Submission Guidelines
✅ GitHub repo (or ZIP file) with all test scripts and framework setup.
✅ README file explaining dependencies and execution steps.
✅ Separate folders for UI, API, and DB tests.
✅ Video recording of test execution (optional but preferred).
✅ Submission Deadline: [To Be Decided].

Why This Assignment?
✅ UI + API + Database Integration – Full-stack automation skills.
✅ Public API & Free DB – No need for custom backend setup.
✅ Structured Framework – Assesses Cypress best practices and real-world automation skills.

This version ensures a comprehensive assessment while using free and accessible resources. Let me know if you need further refinements! 🚀



Subject: Next Steps – Assignment for Evaluation
Dear [Candidate's Name],

Thank you for taking the time to interview with us. We appreciate your strong technical skills in Java, Selenium, and Playwright, and we are impressed with your overall expertise.

As our automation ecosystem is entirely Cypress-based, we are looking for candidates with hands-on experience in Cypress and JavaScript. Given this, we would like to assess your Cypress proficiency before moving forward with the offer process.

To evaluate this, we are assigning you a technical assignment, which you will have 10 days to complete. After submission, we will schedule another round of discussion to review your work and determine the next steps.



